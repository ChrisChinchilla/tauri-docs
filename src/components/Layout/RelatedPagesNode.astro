---
import type { CollectionEntry, getCollection } from 'astro:content'
import { l } from 'astro-i18n'

interface Props<C extends Parameters<typeof getCollection>[0]> {
  entry: CollectionEntry<C>
  baseUrl?: string
}

const { entry, baseUrl } = Astro.props

let title = entry.slug
if (entry.data.title) {
  title = entry.data.title
}

let url = entry.slug
if (baseUrl) {
  url = `${baseUrl}/${url}`
}
if (!url.startsWith('/')) {
  url = '/' + url
}

function trimSlash(url: string) {
  return url.replace(/^\/+|\/+$/g, '')
}
---

<li>
  <a
    href={l(url)}
    class:list={[
      'list-item',
      { 'list-item-active': trimSlash(url) === trimSlash(Astro.url.pathname) },
    ]}
  >
    {title}
  </a>
  {
    entry.children && (
      <ul class="pl-2">
        {entry.children.map((child: any) => (
          <Astro.self entry={child} baseUrl={baseUrl} />
        ))}
      </ul>
    )
  }
</li>
